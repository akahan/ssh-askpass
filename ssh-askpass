#!/usr/bin/env osascript
# Copyright (c) 2014-, Johan Wassberg <johan@rymdvarel.se>
# Copyright (c) 2011-, Simon Lundstr√∂m <simmel@soy.se>
#
# Permission to use, copy, modify, and/or distribute this software for any
# purpose with or without fee is hereby granted, provided that the above
# copyright notice and this permission notice appear in all copies.
#
# THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
# REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND
# FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
# INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
# LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
# OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
# PERFORMANCE OF THIS SOFTWARE.

on run argv
    set prompt to argv as text

    set dialog_timeout to 15

    set agent to POSIX file "/System/Applications/Utilities/Terminal.app/Contents/Resources/Terminal.icns"

    set ok_button to {get localized string of "OK"}
    set cancel_button to {get localized string of "Cancel"}
    set dialog_buttons to {cancel_button, ok_button}

    launch application "System Events"

    try
        tell application "System Events"
            if prompt ends with ": " or prompt ends with ":" then
                if prompt contains "pass" or prompt contains "pin" then
                    display dialog prompt with icon agent buttons dialog_buttons default button ok_button default answer "" with hidden answer
                else
                    display dialog prompt with icon agent buttons dialog_buttons default button ok_button default answer ""
                end if
                set text_returned to result's text returned
            else
                display dialog prompt with icon agent buttons dialog_buttons default button cancel_button giving up after dialog_timeout
                if gave up of result then
                    error result
                end if
                set text_returned to ""
            end if
            quit
        end tell
        if text_returned is not "" then
            return text_returned
        else
            return
        end if
    on error e number n
        tell application "System Events" to quit
        error e
    end try
end run
